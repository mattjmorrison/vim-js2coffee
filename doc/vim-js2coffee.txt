*vim-python-test-runner.txt* A Django aware testsrunner for vim.
Allows you to run Django unit tests that require database interactions, with
django-nose as well as unit tests outside of a Django project with nosetests.

===============================================================================
CONTENTS                                                 *test-runner-contents*


    1. Intro ............................................ |vim-js2coffee-intro|
    2. Installation .............................. |vim-js2coffee-installation|
    3. Requirements .............................. |vim-js2coffee-requirements|
    4. Usage ............................................ |vim-js2coffee-usage|
    5. Config File .................................. |test-runner-config-file|
        5.1 Config file contents........................ |config-file-contents|
        5.2 Outside of Django................. |plugin-usage-outside-of-django|
    6. Licence .......................................... |test-runner-licence|
    7. Bugs ................................................ |test-runner-bugs|
===============================================================================
1. Intro                                                  *vim-js2coffee-intro*

JavaScript to CoffeeScript and CoffeeScript to JavaScript from the comfort of
your vim buffer.

===============================================================================
2. Installation                                    *vim-js2coffee-installation*
The recommended installation method is vundle https://github.com/gmarik/vundle
installation should also work via pathogen
https://github.com/tpope/vim-pathogen

===============================================================================
3. Requirements                                    *vim-js2coffee-requirements*

You need a VIM version that was compiled with python support, which is typical
for most distributions on Linux/Mac.  You can check this by running
``vim --version | grep +python``
if you get a hit you are in business.

You will need to npm install `js2coffee` and `coffee-script` to preform the
actual compilation. Make sure that you have access to both `js2coffee` and
`coffee` from your shell in order for this plugin to be able to function.

# Note for OSX users #
It seems that even after globaly npm installing js2coffee it will still not be
on the path as a default. Extending the PATH
with `export PATH=/usr/local/share/npm/bin:$PATH` should get you started.

===============================================================================
4. Usage                                                  *vim-js2coffee-usage*

The plugin provides four commands:

    JSBuffer2Coffee
    JSSelection2Coffee
    CoffeeBuffer2JS
    CoffeeSelection2JS

For ease of usage you can map the above actions to a shortcut. For example,
if you wanted leader mappings you could set something like the following in
your vimrc:

    nnoremap<Leader>bc :CoffeeBuffer2JS<CR>
    nnoremap<Leader>sc :CoffeeSelection2JS<CR>
    nnoremap<Leader>bj :JSBuffer2Coffee<CR>
    nnoremap<Leader>bs :JSSelection2Coffee<CR>
